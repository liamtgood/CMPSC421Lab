{
    "swagger": "2.0",
    "info": {
      "title": "Ordering System API",
      "description": "This is a restful api for an ordering system",
      "version": "1.0.0"
    },
    "host": "localhost:3000",
    "basePath": "/",
    "schemes": ["http"],
    "paths": {
      "/customers": {
        "post": {
          "summary": "creates customer",
          "description": "A new customer is added to system",
          "parameters": [
            {
              "in": "body",
              "name": "body",
              "required": true,
              "schema": {
                "type": "object",
                "properties": {
                  "first_name": { "type": "string" },
                  "last_name": { "type": "string" },
                  "username": { "type": "string" }
                },
                "required": ["first_name", "last_name","username"]
              }
            }
          ],
          "responses": {
            "201": { "description": "Customer created successfully" },
            "400": { "description": "Invalid input" }
          }
        }
      },
      "/orders": {
        "post": {
          "summary": "Creates order",
          "description": "Submits an order for a customer from customers id.",
          "parameters": [
            {
              "in": "body",
              "name": "body",
              "required": true,
              "schema": {
                "type": "object",
                "properties": {
                  "customerId": { "type": "string" },
                  "products": { "type": "array", "items": { "type": "string" } },
                  "orderDate": {"type":"string","default":"date.now"},
                  "status": {"type": "string", "default": "Pending"}
                  
                },
                "required": ["customerId", "products"]
              }
            }
          ],
          "responses": {
            "201": { "description": "Order created successfully" },
            "400": { "description": "Invalid input" }
          }
        }
      },
      "/orders/{id}": {
        "patch": {
          "summary": "Updates order",
          "description": "Updates the products in the order.",
          "parameters": [
            {
              "in": "path",
              "name": "id",
              "required": true,
              "type": "string"
            },
            {
              "in": "body",
              "name": "body",
              "required": true,
              "schema": {
                "type": "object",
                "properties": {
                  "products": { "type": "array", "items": { "type": "string" } }
                }
              }
            }
          ],
          "responses": {
            "200": { "description": "Order updated successfully" },
            "404": { "description": "Order not found" }
          }
        },
        "delete": {
          "summary": "Deletes order",
          "description": "Deletes an order by its ID.",
          "parameters": [
            {
              "in": "path",
              "name": "id",
              "required": true,
              "type": "string"
            }
          ],
          "responses": {
            "200": { "description": "Order deleted successfully" },
            "404": { "description": "Order not found" }
          }
        }
      },
      "/orders/{id}/cancel": {
        "put": {
            "summary": "Cancels order",
            "description": "cancels an order and updates its status to canceled",
            "parameters": [
            {
                "in": "path",
                "name": "id",
                "required": true,
                "type": "string",
                "description": "the id of the order you want to cancel"
            }
            ],
            "responses": {
            "200": {
                "description": "Order successfully cancelled",
                "schema": {
                "type": "object",
                "properties": {
                    "_id": { "type": "string" },
                    "customerId": { "type": "string" },
                    "items": { "type": "array", "items": { "type": "string" } },
                    "status": { "type": "string", "example": "Cancelled" },
                    "__v": { "type": "integer" }
                }
                }
            },
            "404": {
                "description": "Order not found"
            },
            "500": {
                "description": "Internal server error"
            }
          }
        }
      },
      "/payments": {
        "post": {
            "summary": "Submits a payment",
            "description": "creates a payment to be used on an order.",
            "parameters": [
            {
                "in": "body",
                "name": "body",
                "required": true,
                "schema": {
                "type": "object",
                "properties": {
                    "orderId": { "type": "string", "description": "The ID of the order" },
                    "cost": { "type": "number", "description": "The payment cost" }
                },
                "required": ["orderId", "cost"]
                }
            }
            ],
            "responses": {
            "201": {
                "description": "Payment created successfully",
                "schema": {
                "type": "object",
                "properties": {
                    "_id": { "type": "string" },
                    "orderId": { "type": "string" },
                    "cost": { "type": "number" },
                    "__v": { "type": "integer" }
                }
                }
            },
            "400": {
                "description": "Invalid input"
            },
            "500": {
                "description": "Internal server error"
            }
          }
        }
      },
      "/orders/{id}/process": {
        "post": {
            "summary": "Process an order",
            "description": "Does the asyncronous process delay for an order",
            "parameters": [
            {
                "in": "path",
                "name": "id",
                "required": true,
                "type": "string",
                "description": "id of order needing processing"
            }
            ],
            "responses": {
            "200": {
                "description": "Order processing started",
                "schema": {
                "type": "object",
                "properties": {
                    "message": { "type": "string" }
                }
                }
            },
            "404": {
                "description": "Order not found"
            },
            "500": {
                "description": "Internal server error"
            }
          }
        }
      }
    }
  }
  