# Order System API

This API provides functionality for managing customers, orders, and payments. It adheres to REST principles and uses JSON for request/response formats.

This api is used for a ordering system. This will create customer, create orders, process payments, delete or cancel orders, or edit orders. It uses RESTful apis to achieve this. JSON is used for the request and resonse format. 

## Features
- Create customer
- Create and manage orders
- Update and delete orders
- Asynchronous operations such as processing order

## Base URL
`http://localhost:3000`

---

## Endpoints

### 1. **Create Customer**
- **POST** `/customers`
- **Request Body**:
  ```json
  {
      "first_name": "Liam",
      "last_name": "Good",
      "username":"lgood"
  }

### 2. **Create Order**
- **POST** `/orders`
- **Request Body**:
  ```json
  {
      "customerID": "a customer id",
      "products": ["p1","p2","p3"]
  }

### 3. **Cancel Order**
- **PUT** `/orders/:id/cancel`
- replace :id with generated order id
- no body required

### 4. **Submit Payment**
- **POST** `/payments`
- **Request Body**:
  ```json
  {
      "orderId": "a unique order id",
      "cost": "100"
  }

### 5. **Get Order**
- **POST** `/orders/:id`
- replace :id with specific order id
- should return information about the order

### 6. **Delete Order**
- **delete** `/orders/:id`
- repalce :id with specific order id
- should delete the order

### 7. **Update products in order**
- **patch** `/orders/:id`
- **Request Body**:
  ```json
  {
      "products":["p1","p2","p4"]
  }

### 8. **Async operatioon for processing order**
- **POST** `/orders/:id/process`
- replace :id with specific order id
- should wait 3 seconds, simulating delay, then the order status should update to processed